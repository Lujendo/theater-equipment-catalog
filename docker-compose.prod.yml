version: '3.8'
services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: always
    ports:
      - "80:3000" # Frontend
      - "443:5000" # Backend with SSL
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - NODE_ENV=${NODE_ENV}
      - FRONTEND_URL=${FRONTEND_URL}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - MAX_FILES=${MAX_FILES}
    volumes:
      - uploads:/app/server/uploads
      - ./logs:/app/server/logs
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 2G
      restart_policy:
        condition: on-failure
        max_attempts: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    # In production, we don't expose phpMyAdmin directly
    # It should be accessed through a secure VPN or SSH tunnel
    expose:
      - "80"
    deploy:
      resources:
        limits:
          memory: 512M

volumes:
  uploads:
  mysql-data:

networks:
  app-network:
    driver: bridge
